[ TODO list and tentative development plan ]
[ // = done, but not tested/documented     ]

// * define - check for dependencies before undefining function
//  "undefine Function", don't allow to redefine it implicitely

// * cmd: with option=value[, option2=value2 ...] command
//          -- set value of option for this command only

// * (GUI) show function limits when cursor is over peak top

// * [BUG] data tranform: -x^2 == x^2. And the same in functions.

//* DataExpressionGrammar and aggregate functions: 
//    aggregate functions: min, max, sum, eg.  min(y if 20<x<25)
//                         avg, stddev
//      darea function:  darea(y-F(x) if 20<x<25)    -> (x[n+1]-x[n-1])/2 * t
//    [BUG] sum() doesn't work in "info sum(x)" or $a={sum(y)}

// * [BUG] "info S", "info X" give some results, 
//  info SplitGaussian gives syntax error

* document Split* functions.

// * CLI: tab expansion: info

* Gamma function in DataExpressionGrammar and FuncGrammar,
  and PearsonA (built-in) compound function.
  First must have digamma function (to calculate derivative of gamma)

// * Command parse-and-execute flow:
//   * parse_and_execute() should return status rather than throw exceptions
//   * log status of executed commands 
//     (now info commands displays fake statistics)
//   * info commands[n:m] //instead of commands[n:m]

//* mixed data/sum export, eg:
  // @n (x, y, abs(y-F(x)), %foo(x), %bar(x)) > file 
  // only active points are exported, unless "a" is in export list
  //"*F(...)" expands to all functions in F, ie. to %a(...), %b(...)

* (GUI) point export dialog, radiobox:
	  x, y
	  x, y, s [default]
	  a, x, y, s
	  x, y, s, sum, 
	  x, y, s, sum, all functions
	  a, x, y, s, sum, all-functions
	  custom

// * (F > file) when exporting function/sum as parameters or formula: 
//    "@*.F > file.peaks"  -- separated by empty lines (and headers with titles)
//    "F+  > file.peaks" export also symmetric errors 
//  --- new syntax ---
//    @0.peaks > file
//    @0.peaks+ > file
//    @0.formula > file

* link to "On-line tutorial" and the tutorial itself(!)

* [BUG] (sometimes?) automatic variables are not deleted automatically

* [BUG]: program crashes (MS Win 9x) when data contains NaN (as a result
  of asin(x) x>1) and "Zoom all" is called.

* EMG function: how to calculate it? Now there are some problems with
  this function. There must be smarter way to implement it...

------------- next release here (0.7.4)

* [GUI] remove/unremove background button 
  (like in 0.4.x, requires storing of background points, and will have
  undefined bahaviour
  when other data tranformations were done between remove and unremove).

* Should y=0 be visible when doing plot [] [] ? 
  Perhaps one (which?) of "plot . []" and "plot . [:]" should show y=0,
  the other one not? what about plot . [:30]?
   -> by default, auto-scaling does not include x/y=0, unless it's
      in, say, 20% plot margin. "[:]" is an exception and includes 0.

* (GUI) peak dragging -- sensible scaling of parameter changes 
           (problems with width changing)
 	(bug?) now it matters in which point exactly you catch the peak

* (GUI) auxiliary plot - option "reverse", that shows difference
  between sum and data (not between data and sum).

* user defined functions:
      - default parameter values (use it for PseudoVoigtA)
      - syntax:
        --> define Gaussian(a,pos,width): a*exp(-((x-pos)/width)^2)
	                   ^^^ any name but 'x' allowed here
      - more sophisticated simplifications of expressions and CSE(!)
      - calculating limits, width, area, etc. for UDF(!)

------------------ next release here 0.7.5

* settings: fitting options

* greyed fit-continue menu/button

* simple-variable domain ~3[2:14]

* history (data / sum / view / all) 
   i don't exactly know how to implement it yet

* implement command "dump", which also embeds data in script using
   M=..., x[0]=.., y[0]=.., s[0]=..., a[0]=.., x[1]=..,...

* (GUI) redrawing for many datasets (~100) takes noticable time.
  Kind of plot buffering (as a bitmap).

------------------ next release here 0.7.6

* build engine (everything but GUI/CLI interface) as a library
  with more or less documented API.

------------------ next release here 0.8.0

* python scripts  -- built-in Python interpreter which allows to extend 
  Fityk using user-written scripts, optional modules, etc. 
  [IMPORTANT]

* rewrite crystallographic part in python
  [IMPORTANT]

------------------ next release here 

* (GUI) data-range mode: if all points are active, left mouse button
  should "select", not "activate", ie. it should do A = (left<x<right)  (?)

* (GUI) when printing, everything is first rescaled and rounded(!!!) for
  plot window at the screen, and then rescaled to the paper size. 
  This rounding causes visible artefacts at the printout.
  (wxDC.GetSize instead of plot.GetClientSize() ?)

* exporting sum and data: "F  >> file" append (not truncate) to file

* info -- more informations about error, confidence limits, etc.
  graphical interface Fit > Info

* (GUI) Configurable status bar:
	  more extensive and configurable (2/3 buttons, size) mouse hints 
		   (also for aux. plot, etc)
	  more exact (or customizable) y coordinate at status bar

* (GUI) vertical scaling using mouse on main plot near to left edge of the plot 

* GUI [BUG] aux. plot - when program is called with script as an argument
   aux. plot looks strange at the start of the program until it is replotted

* improve Voigt function (cut-tails, better approx?) 

* (GUI) use numeric pad keys (WXK_NUMPAD_*) as shortcuts for changing 
	function parameters.

* GUI: it should be possible to constrain two parameters of two peak,
     at least to make them equal.

* GUI: easy way to do: F[hwhm]=..., F[shape]=...;

* GUI: button 'freeze' on variables pane

* Fitting 
	simulated annealing (it can replace LM shake_before option)
	perhaps also BFGS, conjugate gradients methods
	autoplot option -> fitting tab, checkbox: replot-after-fit-iteration

* GUI: menu Functions:
  Functions > Peak-Find Info -> animation
  Functions > Multidata P-F Info -> window with list of parameters (Xview-like)

* Function: check_parameters_out_of_domain() ?  
             eg. in Pearson shape > 0.5 , shape < 1e9
	     called from fitting iteration?
	     what if parameter is out-of-domain? change? disable function?
	                                          change and freeze?
	     set fit-fix-parameters-times = 5
	    simple-var bounds?
	    ? $$simple = ~{min2(max2($simple, -1e9), 1e9)}

* GUI: Data Editor - left/right/top/bottom - magic keywords: user would be
       asked to select point/range/rectangle in plot

* cmd/GUI: plot peak-groups: ==> plot (%a+%b+%c)  

* (GUI) different peak-draft for steps (new function category), 
         and for other functions

* (GUI) where config files should be stored on MS Windows? Registry or file?

* (INTERNAL) use smart pointers: 
  http://www.boost.org/libs/smart_ptr/smart_ptr.htm
  (the library will be distributed in 3rdparty/boost)

* there are problems with refreshing plots and output window when program
  is busy (ie. when running script or fitting). It seems to be platform
  dependent.

* auto-freezing of peaks at disactivated range

* loading data -- use Difdaf library (when it will be ready) for powder
  diffraction data import.
  other formats (from survey): .jdx JCAMP-DX (www.jcamp.org)
		         Galactic (GRAMS/32) SPC files (especially multifiles)
			 Vamas (vms), 
			 multipart Siemens .raw data files
			 uxd,udf
  perhaps OPJ with liborigin and XLS with another library

* (GUI) single dialog for configuring main plot(?)
  data point size and other properties can be put on data pane(?)

* (GUI, BUG) in Configure axes / peak labels: fonts are changed event
  if Apply is not pressed

* (GUI) stopping fitting interactively (when user don't want to wait longer);
  use threads? or wxTimer?

* automatic background substraction - what are good algorithms?

* more sophisticated algorithms for peak detection

* fitting: it should be separated even more from the rest of the program.
  Perhaps it fitting functions should be in extern library (COOOL,
  GAUL, WNLIB, netlib, OOL.sf.net
  are there any other such libraries? 
  I haven't investigated the possibility of using mentioned libs yet. 
  Links: http://coool.mines.edu/ http://gaul.sourceforge.net/, 
  http://www.willnaylor.com/wnlib.html,
  http://sal.jyu.fi/B/3/index.shtml, http://coin-or.org,
  http://www-unix.mcs.anl.gov/otc/Guide/faq/nonlinear-programming-faq.html) 

* fitting: robust fit - other error distributions then Gaussian, 
  eg. Lorenzian...; so called 'maximum-likelihood method' -- using Poisson
  error distribution.

* Now only '.' is supported as a decimal separator. ',' should also
  be an option.

* investigate LLVM - can it be used for faster calculation of 
  user-defined functions?

* [BUG] (GUI) (MS Win) <br> does not work in vertical peak labels 

